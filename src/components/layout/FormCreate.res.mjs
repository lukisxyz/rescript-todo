// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ulid from "../../lib/Ulid.res.mjs";
import * as Utils from "../../lib/Utils.res.mjs";
import * as React from "react";
import * as Button from "../ui/Button.res.mjs";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as LocalStorage from "../../lib/LocalStorage.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as ReactAriaComponents from "react-aria-components";

var ReactAriaDialogTrigger = {};

var ReactAriaDialog = {};

var ReactAriaModal = {};

var TextArea = {};

function FormCreate(props) {
  var onSubmitEvent = props.onSubmitEvent;
  var match = React.useState(function () {
        return "";
      });
  var setText = match[1];
  var text = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setOpenModal = match$1[1];
  var handleInputChange = function ($$event) {
    var value = $$event.currentTarget.value;
    setText(function (param) {
          return value;
        });
  };
  React.useEffect((function () {
          setText(function (param) {
                return "";
              });
        }), []);
  var handleOpenModal = function (param) {
    setOpenModal(function (param) {
          return true;
        });
  };
  var handleCloseModal = function (param) {
    setOpenModal(function (param) {
          return false;
        });
  };
  var handleOverlayModal = function (param) {
    setOpenModal(function (param) {
          return false;
        });
  };
  return JsxRuntime.jsxs(ReactAriaComponents.DialogTrigger, {
              children: [
                JsxRuntime.jsxs(Button.make, {
                      className: Utils.cn([
                            "absolute right-2 top-1/2 -translate-y-1/2 rounded-full z-10 py-7 px-[0.65rem]",
                            "bg-indigo-400 text-white",
                            "active:scale-105 active:ring-4 focus:ring-4",
                            "hover:bg-indigo-500"
                          ]),
                      onClick: handleOpenModal,
                      children: [
                        JsxRuntime.jsx("span", {
                              children: "Add new task",
                              className: "sr-only"
                            }),
                        JsxRuntime.jsxs("svg", {
                              children: [
                                JsxRuntime.jsx("path", {
                                      d: "M0 0h24v24H0z",
                                      fill: "none",
                                      stroke: "none"
                                    }),
                                JsxRuntime.jsx("path", {
                                      d: "M12 5l0 14"
                                    }),
                                JsxRuntime.jsx("path", {
                                      d: "M5 12l14 0"
                                    })
                              ],
                              className: "w-9 h-9",
                              height: "44",
                              width: "44",
                              fill: "none",
                              stroke: "currentColor",
                              strokeLinecap: "round",
                              strokeLinejoin: "round",
                              strokeWidth: "1.5",
                              viewBox: "0 0 24 24",
                              xmlns: "http://www.w3.org/2000/svg"
                            })
                      ]
                    }),
                JsxRuntime.jsx(ReactAriaComponents.Modal, {
                      children: JsxRuntime.jsx(ReactAriaComponents.Dialog, {
                            children: JsxRuntime.jsx("div", {
                                  children: JsxRuntime.jsxs("div", {
                                        children: [
                                          JsxRuntime.jsxs(Button.make, {
                                                className: Utils.cn([
                                                      "absolute right-4 top-4 rounded-full z-10 py-6 px-[0.65rem]",
                                                      "bg-red-50 text-red-700",
                                                      "active:scale-105 active:ring-4 focus:ring-4",
                                                      "hover:bg-red-100"
                                                    ]),
                                                onClick: handleCloseModal,
                                                children: [
                                                  JsxRuntime.jsx("span", {
                                                        children: "Close modal",
                                                        className: "sr-only"
                                                      }),
                                                  JsxRuntime.jsxs("svg", {
                                                        children: [
                                                          JsxRuntime.jsx("path", {
                                                                d: "M0 0h24v24H0z",
                                                                fill: "none",
                                                                stroke: "none"
                                                              }),
                                                          JsxRuntime.jsx("path", {
                                                                d: "M12 5l0 14"
                                                              }),
                                                          JsxRuntime.jsx("path", {
                                                                d: "M5 12l14 0"
                                                              })
                                                        ],
                                                        className: "w-7 h-7 rotate-45",
                                                        height: "44",
                                                        width: "44",
                                                        fill: "none",
                                                        stroke: "currentColor",
                                                        strokeLinecap: "round",
                                                        strokeLinejoin: "round",
                                                        strokeWidth: "1.5",
                                                        viewBox: "0 0 24 24",
                                                        xmlns: "http://www.w3.org/2000/svg"
                                                      })
                                                ]
                                              }),
                                          JsxRuntime.jsxs("div", {
                                                children: [
                                                  JsxRuntime.jsx("h1", {
                                                        children: "Create New Task Todo",
                                                        className: "text-2xl text-primary"
                                                      }),
                                                  JsxRuntime.jsx("br", {}),
                                                  JsxRuntime.jsxs("form", {
                                                        children: [
                                                          JsxRuntime.jsx("label", {
                                                                children: "Task:",
                                                                htmlFor: "task"
                                                              }),
                                                          JsxRuntime.jsx("br", {}),
                                                          JsxRuntime.jsx(ReactAriaComponents.TextArea, {
                                                                label: "Todo:",
                                                                name: "task",
                                                                className: "h-32 p-2 w-full border",
                                                                maxLength: 120,
                                                                value: text,
                                                                onChange: handleInputChange
                                                              }),
                                                          JsxRuntime.jsx("br", {}),
                                                          JsxRuntime.jsx("br", {}),
                                                          JsxRuntime.jsx(Button.make, {
                                                                onClick: (function (param) {
                                                                    try {
                                                                      var key = Ulid.generateULID();
                                                                      var currentKey = LocalStorage.getItem("key");
                                                                      LocalStorage.setItem(key, text);
                                                                      if (currentKey === "") {
                                                                        LocalStorage.setItem("key", key);
                                                                      } else {
                                                                        LocalStorage.setItem("key", key + "," + currentKey);
                                                                      }
                                                                      LocalStorage.getItem(key);
                                                                      onSubmitEvent();
                                                                      setOpenModal(function (param) {
                                                                            return false;
                                                                          });
                                                                      return Utils.notify("Success create new task todo");
                                                                    }
                                                                    catch (raw_obj){
                                                                      var obj = Caml_js_exceptions.internalToOCamlException(raw_obj);
                                                                      if (obj.RE_EXN_ID === Js_exn.$$Error) {
                                                                        var m = obj._1.message;
                                                                        if (m !== undefined) {
                                                                          Utils.notify(m);
                                                                        }
                                                                        return setOpenModal(function (param) {
                                                                                    return false;
                                                                                  });
                                                                      }
                                                                      throw obj;
                                                                    }
                                                                  }),
                                                                children: "Save"
                                                              })
                                                        ]
                                                      })
                                                ],
                                                className: "px-6 py-16 h-full w-full"
                                              })
                                        ],
                                        className: "bg-white h-[84vh] rounded-md p-3 overflow-hidden relative"
                                      }),
                                  className: "absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 max-w-[31rem] max-h-[96vh] overflow-hidden w-full mx-auto p-3"
                                }),
                            className: "h-screen w-screen bg-black/50 z-50"
                          }),
                      isDismissable: true,
                      isOpen: match$1[0],
                      onOpenChange: handleOverlayModal
                    })
              ]
            });
}

var make = FormCreate;

export {
  ReactAriaDialogTrigger ,
  ReactAriaDialog ,
  ReactAriaModal ,
  TextArea ,
  make ,
}
/* Ulid Not a pure module */
